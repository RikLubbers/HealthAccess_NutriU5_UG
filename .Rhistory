data    = DHS_children_sub,
variables = NULL)
#srvyr
#DHS_children_sub_weighted_srvyr = DHS_children_sub %>% as_survey_design(V001,
#  strata  = V023,
# weights = V005,
#nest = TRUE)
# Chunk 9: visualization outcome variables
#To plot GGplots, put in console
#OUTCOME VARIABLES
#Histogram for stunting
svyhist(~DHS_children_sub_weighted$variables$HW5, DHS_children_sub_weighted,
main = "Frequency of weighted children under-5 being stunted",
xlab = "Standard deviations from expected height for age",
col  = "light blue",
border = F,
ylim = c(0, 500),
xlim = c(-6, 6),
breaks = 40,
freq =T)
#ggplot(data = DHS_children_sub_weighted_srvyr, aes(x = HW5, fill = V024))
ggplot(DHS_children_sub_weighted$variables, aes(x = HW5, fill = V024)) +
geom_histogram(alpha = 0.5, position = "identity")
#Histogram for underweight
svyhist(~DHS_children_sub_weighted$variables$HW8, DHS_children_sub_weighted,
main = "Frequency of weighted children under-5 being underweight",
xlab = "Standard deviations from expected weight for age",
col  = "light blue",
border = F,
ylim = c(0, 500),
xlim = c(-6, 6),
breaks = 40,
freq = T)
ggplot(DHS_children_sub_weighted$variables, aes(x = HW8, fill = V024)) +
geom_histogram(alpha = 0.5, position = "identity")
#Histogram for wasting
svyhist(~DHS_children_sub_weighted$variables$HW11, DHS_children_sub_weighted,
main = "Frequency of weighted children under-5 being wasted",
xlab = "Standard deviations from expected weight for height",
col  = "light blue",
border = F,
ylim = c(0, 500),
xlim = c(-6, 6),
breaks = 40,
freq = T)
ggplot(DHS_children_sub_weighted$variables, aes(x = HW11, fill = V024)) +
geom_histogram(alpha = 0.5, position = "identity")
#COVARIATES
#Wealth Index
svyhist(~DHS_children_sub_weighted$variables$V191, DHS_children_sub_weighted,
main = "Distribution of wealth index",
xlab = "Wealth index factor score",
col  = "light blue",
border = F,
ylim = c(0, 500),
breaks = 40,
freq = T)
ggplot(DHS_children_sub_weighted$variables, aes(x = V191, fill = V024)) +
geom_histogram(alpha = 0.5, position = "identity")
#Age of respondent at first birth
svyhist(~DHS_children_sub_weighted$variables$V212, DHS_children_sub_weighted,
main = "Age of respondent at first birth",
xlab = "Age in years",
col  = "light blue",
border = F,
ylim = c(0, 1000),
xlim = c(10, 35),
breaks = 30,
freq = T)
#Body mass index (BMI) of mother
svyhist(~DHS_children_sub_weighted$variables$V445, DHS_children_sub_weighted,
main = "Body mass index (BMI) of mother",
xlab = "Kg/m^2",
col  = "light blue",
border = F,
ylim = c(0, 1000),
xlim = c(10, 50),
breaks = 30,
freq = T)
#Mother is currently working
barplot(svytable(~DHS_children_sub_weighted$variables$V714, DHS_children_sub_weighted),
main = "Mother is currently working",
xlab = "Work status",
col  = "light blue",
border = F,
ylim = c(0, 6000)
)
#Mother's educational attainment
barplot(svytable(~DHS_children_sub_weighted$variables$V149, DHS_children_sub_weighted),
main = "Mother's educational attainment",
xlab = "Educational attainment",
col  = "light blue",
border = F,
ylim = c(0, 4000)
)
#Father/partners educational attainment
barplot(svytable(~DHS_children_sub_weighted$variables$V729, DHS_children_sub_weighted),
main = "Fathers's educational attainment",
xlab = "Educational attainment",
col  = "light blue",
border = F,
ylim = c(0, 4000)
)
#Sex of child
barplot(svytable(~DHS_children_sub_weighted$variables$B4, DHS_children_sub_weighted),
main = "Sex of child",
xlab = "Sex",
col  = "light blue",
border = F,
ylim = c(0, 4000)
)
#Birth interval (more or less than 24 months)
barplot(svytable(~DHS_children_sub_weighted$variables$B11, DHS_children_sub_weighted),
main = "Birth interval ",
xlab = "Birth interval ",
col  = "light blue",
border = F,
ylim = c(0, 4000)
)
#Diarrhea last two weeks
barplot(svytable(~DHS_children_sub_weighted$variables$H11, DHS_children_sub_weighted),
main = "Diarrhea last two weeks",
xlab = "Diarrhea last two weeks",
col  = "light blue",
border = F,
ylim = c(0, 4000)
)
#Stunting by travel time #TEST
#ggplot(DHS_children_sub, aes(Travel_time_min, HW5)) +
# geom_point(data = DHS_children_sub, aes(y = HW5), colour = 'blue', size = 1, position = "jitter")+
#geom_smooth(method = glm)+
#labs(x ="Travel Time in Minutes", y = "Stunting in SD")
#Boxplot stunted traveltime #TEST #NOT WEIGHTED
#ggplot(data = subset(DHS_children_sub, !is.na(HW5_cat)), aes(y = Travel_time_min, x = HW5_cat, fill = HW5_cat)) +
#geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=8, outlier.size=4) +
#coord_flip()+
#theme(legend.position="top") +
#stat_summary(fun = "mean", geom = "point", shape=18, size=3, color = "blue") +
#stat_summary(fun.y=mean, colour="blue", geom="text",
#            vjust=-0.7, aes( label=round(..y.., digits=1)))
#ggplot(data = subset(DHS_children_sub, !is.na(HW8_cat)), aes(y = Travel_time_min, x = HW8_cat, fill = HW8_cat)) +
# geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=8, outlier.size=4) +
#coord_flip()+
#theme(legend.position="top") +
#stat_summary(fun = "mean", geom = "point", shape=18, size=3, color = "blue") +
#stat_summary(fun.y=mean, colour="blue", geom="text",
#            vjust=-0.7, aes( label=round(..y.., digits=1)))
#ggplot(data = subset(DHS_children_sub, !is.na(HW11_cat)), aes(y = Travel_time_min, x = HW11_cat, fill = HW11_cat)) +
# geom_boxplot(notch = TRUE, outlier.colour="red", outlier.shape=8, outlier.size=4) +
#coord_flip()+
#theme(legend.position="top") +
#stat_summary(fun = "mean", geom = "point", shape=18, size=3, color = "blue") +
#stat_summary(fun.y=mean, colour="blue", geom="text",
#            vjust=-0.7, aes( label=round(..y.., digits=1)))
# Chunk 10: table 1
#GENERATING TABLE 1
#Stunting
table1_stunted = table1(~ B4 + BORD + M19 + B11 + H11 + V149 + V729 + V191 + V212 + V445 + V714 | HW5_cat, data=DHS_children_sub, topclass="Rtable1-zebra")
#Underweight
table1_underweight = table1(~ B4 + BORD + M19 + B11 + H11 + V149 + V729 + V191 + V212 + V445 + V714 | HW8_cat, data=DHS_children_sub, topclass="Rtable1-zebra")
#Wasted
table1_wasted = table1(~ B4 + BORD + M19 + B11 + H11 + V149 + V729 + V191 + V212 + V445 + V714 | HW11_cat, data=DHS_children_sub, topclass="Rtable1-zebra")
#PRINT IN CONSOLE TO VIEW
table1_stunted
table1_underweight
table1_wasted
# Chunk 11: GLM
#Generalized linear model
glm1 = svyglm(formula = HW5 ~ HW8,
design = DHS_children_sub_weighted,
family = gaussian(),
rescale = T)
lm1 = lm(HW5 ~ HW8, data = DHS_children_sub)
summary(lm1)
modelsummary(lm1)
modelsummary(glm1)
performance(lm1, glm1)
anova(lm1, glm1)
check_model(glm1)
ggpairs(DHS_children_sub)
summary(lm1)
kable(summary(lm1))
kable(lm1)
modelsummary(lm1)
modelsummary(glm1)
performance(lm1)
1
performance(lm1, glm1)
check_model(glm1)
?performance
performance(glm1)
check_model(glm1)
modelsummary(lm1, glm1)
modelsummary(list(lm1, glm1))
modelsummary(list(lm1, glm1))
modelsummary(list(lm1, glm1))
modelsummary(list(lm1, glm1) stars = TRUE)
modelsummary(list(lm1, glm1), stars = TRUE)
?modelsummary
datasummary(DHS_children_sub)
?datasummary
?datasummary_skim
datasummary_skim(DHS_children_sub)
datasummary_skim(DHS_children_sub, type = "numeric")
datasummary_skim(table(DHS_children_sub), type = "numeric")
modelplot(glm1)
modelplot(lm1)
datasummary_skim(DHS_children_sub)
?datasummary_skim
install.packages("finalfit")
library(finalfit)
library(haven)
library(lattice)
library(ggplot2)
library(data.table)
library(dplyr)
library(knitr)
library(survey)
library(srvyr)
library(expss)
library(labelled)
library(table1)
library(readxl)
library(GGally)
library(kableExtra)
library(xtable)
library(modelsummary)
library(performance)
library(finalfit)
missing_plot(DHS_children_sub)
View(DHS_children_sub)
install.packages("naniar")
library(naniar)
library(haven)
library(lattice)
library(ggplot2)
library(data.table)
library(dplyr)
library(knitr)
library(survey)
library(srvyr)
library(expss)
library(labelled)
library(table1)
library(readxl)
library(GGally)
library(kableExtra)
library(xtable)
library(modelsummary)
library(performance)
library(finalfit)
library(naniar)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
# Chunk 2: package loading
library(haven)
library(lattice)
library(tidyverse)
library(data.table)
library(knitr)
library(survey)
options(survey.lonely.psu="adjust")
library(expss)
library(labelled)
library(table1)
library(readxl)
library(GGally)
library(kableExtra)
library(xtable)
library(modelsummary)
library(performance)
library(finalfit)
library(naniar)
library(rms)
library(openxlsx)
library(rcompanion)
library(questionr)
# Chunk 3: Dota load and subsetting
DHS_children_sub <- read_sav("G:/My Drive/THESIS RUG/DATA/Uganda Full/DHS Clusters/UGKR7BSV_Children/UGKR7BFL.SAV") %>% select(CASEID,
V001, V005,
V023, V024,
V149, V729,
V191, V212,
V445, V714,
BIDX, B0, B4,
B5,   BORD,
HW5,  HW8,
HW11, M19,
B11,  H11,)
#Add nearest facility in meters
NearMeters = read_xls("G:/My Drive/THESIS RUG/DATA/Uganda Full/Analyses/FacilityNearAnalysis.xls", col_names = T)
DHS_children_sub = merge(DHS_children_sub, NearMeters, by.x = "V001", by.y = "DHSCLUST")
rm(NearMeters)
#Convert to KM
DHS_children_sub$NEAR_DIST = DHS_children_sub$NEAR_DIST/1000
#MERGING DATABASES (DHS data and spatial DATA incl. travel time)
#DHS_children_sub = merge(DHS_children_sub, DHS_clusters_TT, by.x = "V001", by.y = "DHSCLUST")
#rm(DHS_clusters_TT)
# Chunk 4: removing metadata
#REMOVING UNNECESSARY SPSS METADATA
DHS_children_sub <- zap_formats(DHS_children_sub)
DHS_children_sub <- zap_widths(DHS_children_sub)
DHS_children_sub <- zap_labels(DHS_children_sub)
DHS_children_sub <- zap_label(DHS_children_sub)
# Chunk 5: providing labels
var_lab(DHS_children_sub$V001) = "Cluster number"
var_lab(DHS_children_sub$V005) = "Women's individual sample weight"
var_lab(DHS_children_sub$V023) = "Stratification used in sample design"
var_lab(DHS_children_sub$BORD) = "Birth order"
var_lab(DHS_children_sub$V149) = "Educational attainment of the mother"
var_lab(DHS_children_sub$V729) = "Educational attainment of the father"
var_lab(DHS_children_sub$V191) = "Wealth index"
var_lab(DHS_children_sub$V212) = "Age of respondent at first birth"
var_lab(DHS_children_sub$V445) = "BMI of mother (kg/m^2)"
var_lab(DHS_children_sub$V714) = "Work status of mother"
var_lab(DHS_children_sub$B4) = "Sex of child"
var_lab(DHS_children_sub$HW5) = "Stunting (continious)"
var_lab(DHS_children_sub$HW8) = "Underweight (continious)"
var_lab(DHS_children_sub$HW11) = "Wasting (continious)"
var_lab(DHS_children_sub$V024) = "Region"
var_lab(DHS_children_sub$M19) = "Birth weight in kilograms"
# Chunk 6: missing data
DHS_children_sub$HW5[DHS_children_sub$HW5==9998] = NA
DHS_children_sub$HW5[DHS_children_sub$HW5==9999] = NA
DHS_children_sub$HW8[DHS_children_sub$HW8==9998] = NA
DHS_children_sub$HW8[DHS_children_sub$HW8==9999] = NA
DHS_children_sub$HW11[DHS_children_sub$HW11==9998] = NA
DHS_children_sub$HW11[DHS_children_sub$HW11==9999] = NA
DHS_children_sub$V149[DHS_children_sub$V149==9] = NA
DHS_children_sub$V149[DHS_children_sub$V149==9] = NA
DHS_children_sub$V729[DHS_children_sub$V729==9] = NA
DHS_children_sub$V445[DHS_children_sub$V445==9998] = NA
DHS_children_sub$V445[DHS_children_sub$V445==9999] = NA
DHS_children_sub$V714[DHS_children_sub$V714==9] = NA
DHS_children_sub$M19[DHS_children_sub$M19==9996] = NA
DHS_children_sub$M19[DHS_children_sub$M19==9998] = NA
DHS_children_sub$M19[DHS_children_sub$M19==9999] = NA
DHS_children_sub$H11[DHS_children_sub$H11==8] = NA
DHS_children_sub$H11[DHS_children_sub$H11==9] = NA
###EDIT AGAIN 9999 is more than 120+
#DHS_children_sub$Travel_time_min[DHS_children_sub$Travel_time_min==9999] = NA
# Chunk 7: recoding
#Birth interval from continuous in dichotomous with more or less than 24 months
DHS_children_sub$B11 = ifelse(DHS_children_sub$B11 >=24, 0, 1)
#Combined diarrhea last 24 hours and 2 weeks in 1 category
DHS_children_sub$H11 = ifelse(DHS_children_sub$H11 == 0, 0, 1)
#provide both with labels again
DHS_children_sub$B11 = factor(DHS_children_sub$B11,
levels = c(0,1),
labels = c("Birth interval more than 24 months",
"Birth interval less than 24 months"))
var_lab(DHS_children_sub$B11) = "Preciding birth interval <=24"
DHS_children_sub$H11 = factor(DHS_children_sub$H11,
levels = c(0,1),
labels = c("No diarrhea in the last 2 weeks",
"Had diarrhea in the last 2 weeks"))
var_lab(DHS_children_sub$H11) = "Had diarrhea in the last two weeks"
#Recode sex of child
DHS_children_sub$B4 = ifelse(DHS_children_sub$B4==1, 0, 1) %>% factor(levels = c(0, 1), labels = c("Male","Female"))
var_lab(DHS_children_sub$B4) = "Sex"
#Set respective variables as factors
DHS_children_sub$V149 = factor(DHS_children_sub$V149,
levels = c(0,1,2,3,4,5),
labels = c("No education",
"Incomplete Primary",
"Complete primary",
"Incomplete secondary",
"Complete secondary",
"Higher"))
var_lab(DHS_children_sub$V149) = "Education of mother"
DHS_children_sub$V729 = factor(DHS_children_sub$V729,
levels = c(0,1,2,3,4,5),
labels = c("No education",
"Incomplete Primary",
"Complete primary",
"Incomplete secondary",
"Complete secondary",
"Higher"))
var_lab(DHS_children_sub$V729) = "Education of father/partner"
DHS_children_sub$V714 = factor(DHS_children_sub$V714,
levels = c(0,1),
labels = c("Not working",
"Currently working"))
var_lab(DHS_children_sub$V714) = "Mother is currently working"
#Changing stunting, wasting, underweight, BMI mother and wealth index variables to interpretative numbers
DHS_children_sub$HW5 = DHS_children_sub$HW5/100
DHS_children_sub$HW8 = DHS_children_sub$HW8/100
DHS_children_sub$HW11 = DHS_children_sub$HW11/100
DHS_children_sub$V445 = DHS_children_sub$V445/100
DHS_children_sub$V191 = DHS_children_sub$V191/1000
#Creating categorical variables for stunting, wasting, underweight, severe acute malnutrition and region,
DHS_children_sub$HW5_cat = ifelse(DHS_children_sub$HW5 >=-2, 0, 1) %>%
factor(levels = c(0,1),
labels = c("Not stunted",
"Stunted"))
var_lab(DHS_children_sub$HW5_cat) = "Stunting categorical"
DHS_children_sub$HW8_cat = ifelse(DHS_children_sub$HW8 >=-2, 0, 1) %>%
factor(levels = c(0,1),
labels = c("Not underweight",
"Underweight"))
var_lab(DHS_children_sub$HW8_cat) = "Underweight categorical"
DHS_children_sub$HW11_cat = ifelse(DHS_children_sub$HW11 >=-2, 0, 1) %>%
factor(levels = c(0,1),
labels = c("Not wasted",
"Wasted"))
var_lab(DHS_children_sub$HW11_cat) = "Wasted categorical"
DHS_children_sub$SAM = ifelse(DHS_children_sub$HW11 >=-3, 0, 1) %>%
factor(levels = c(0,1),
labels = c("Not SAM",
"SAM"))
var_lab(DHS_children_sub$SAM) = "SAM categorical"
DHS_children_sub$V024 = factor(DHS_children_sub$V024,
levels = c(0:14),
labels = c("Kampala",
"South Buganda",
"North Buganda",
"Busoga",
"Bukedi",
"Bugisu",
"Teso",
"Karamoja",
"Lango",
"Acholi",
"West Nile",
"Bunyoro",
"Tooro",
"Ankole",
"Kigezi"))
var_lab(DHS_children_sub$V024) = "Region of residence"
# Chunk 8: removing invalid data
#Dead children & twins
DHS_children_sub = subset(DHS_children_sub, B5==1 & B0 == 0)
#Only keepng children with anthropomorgic measurements
DHS_children_sub = DHS_children_sub %>% drop_na(HW5)
# Chunk 9: survey weights
#dividing weight variable by 1000000
DHS_children_sub$V005 = DHS_children_sub$V005/1000000
DHS_children_sub_weighted <- svydesign(id = DHS_children_sub$V001,
strata  = DHS_children_sub$V023,
weights = DHS_children_sub$V005,
nest    = TRUE,
data    = DHS_children_sub,
variables = NULL)
#Stunting by Euclidian distance to nearest HC facility
ggsurvey(DHS_children_sub_weighted) +
aes (x = NEAR_DIST, y = HW5) +
geom_point() +
geom_smooth(method = loess)+
geom_line(aes( y= HW5 < -2))
#Stunting by Euclidian distance to nearest HC facility
ggsurvey(DHS_children_sub_weighted) +
aes (x = NEAR_DIST, y = HW5) +
geom_point() +
geom_smooth(method = loess)
ggsurvey(DHS_children_sub_weighted) +
aes (x = HW5_cat, y = NEAR_DIST) +
geom_boxplot(fill = c("Green", "red"), alpha = 0.5)
#Underweight by Euclidian distance to nearest HC facility
ggsurvey(DHS_children_sub_weighted) +
aes (x = NEAR_DIST, y = HW8) +
geom_point()+
geom_smooth(method = loess)
#Wasting by Euclidian distance to nearest HC facility
ggsurvey(DHS_children_sub_weighted) +
aes (x = NEAR_DIST, y = HW11) +
geom_point()+
geom_smooth(method = loess)
xyplot(HW5 ~ V191 | V001, data = DHS_children_sub)
#Generalized linear model
glm1 = svyglm(formula = HW5 ~ NEAR_DIST,
design = DHS_children_sub_weighted,
family = gaussian(),
rescale = T)
modelsummary(glm1, stars = T)
performance(glm1)
modelplot(glm1)
lm1 = lm(HW5 ~ NEAR_DIST, data = DHS_children_sub)
modelsummary(list(lm1, glm1), stars = TRUE)
ggcoef_compare(list(lm1, glm1))
#OUTCOME VARIABLES
#Histogram for stunting
ggsurvey(DHS_children_sub_weighted) +
aes(x = HW5) +
geom_histogram(aes(fill = HW5 < -2)) +
scale_fill_manual(values = c("light green", "red"))
ftable(HW5_cat)
ftable(DHS_children_sub$HW5_cat)
freqtable(DHS_children_sub$HW5_cat)
ftable(DHS_children_sub$HW5_cat)
table_freq(DHS_children_sub$HW5_cat)
table(DHS_children_sub$HW5_cat)
svytable(HW5_cat, DHS_children_sub_weighted)
svytable(DHS_children_sub$HW5_cat, DHS_children_sub_weighted)
svytable(~DHS_children_sub$HW5_cat, DHS_children_sub_weighted)
kable(svytable(~DHS_children_sub$HW5_cat, DHS_children_sub_weighted))
svytable(~DHS_children_sub$HW5_cat, DHS_children_sub_weighted)
svytable(~DHS_children_sub$HW8_cat, DHS_children_sub_weighted)
svytable(~DHS_children_sub$HW11_cat, DHS_children_sub_weighted)
svytable(~DHS_children_sub$SAM
svytable(~DHS_children_sub$SAM, DHS_children_sub_weighted)
svytable(~DHS_children_sub$SAM, DHS_children_sub_weighted)
#Birt Order
ggsurvey(DHS_children_sub_weighted) +
aes(x = BORD) +
geom_bar(fill = "light blue", col = "black")
#Nearest facility in Meters
ggsurvey(DHS_children_sub_weighted) +
aes(x = NEAR_DIST) +
geom_histogram(fill = 'light blue', col = "black")
ggsurvey(DHS_children_sub_weighted) +
aes(x = NEAR_DIST, y = V024) +
geom_boxplot()
