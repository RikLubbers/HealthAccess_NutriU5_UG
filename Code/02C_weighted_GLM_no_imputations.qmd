# This code represents an approach for handling non-imputed DHS data from our study.
# However, it is not being used in our current implementation due to the significant reduction in sample size.
# Differences will be found with the unweighted MICE procedure, but that is to be expected due to throwing away almost 80% of our sample.
# By refraining from using this approach, we avoid introducing multiple types of bias into our analysis.

# This code can be copied to Study1_analysis to analyze the dataset using this approach.

# Creating survey weights

```{r survey weights}
# Apply survey weights to the dataset
## Divide the weight variable by 1000000
DHS_children_sub$V005 <- DHS_children_sub$V005 / 1000000

## Create survey weights using the svydesign function
DHS_children_sub_weighted <- svydesign(
    id = DHS_children_sub$V001,
    strata = DHS_children_sub$V023,
    weights = DHS_children_sub$V005,
    nest = TRUE,
    data = DHS_children_sub,
    variables = NULL
)
```

### GLM stunting weighted not imputed

```{r GLM stunting weighted not imputed}    
# Generalized Linear Model for Stunting (HW5)
## Initial GLM with all potential predictors
glm_stunted <- svyglm(
    formula = HW5 ~ B4 + BORD + B0 + M19 + B11 + H11 + H22 + V481 + V149 + V729 + V505 + V191 + V212 + V445 + V714 + V113 + V136 + M5 + H7 + travel_time,
    design = DHS_children_sub_weighted,
    family = gaussian(),
    rescale = T
)

## Removing V149 and B0 due to high VIF (multicollinearity)
glm_stunted <- svyglm(
    formula = HW5 ~ B4 + BORD + M19 + B11 + H11 + H22 + V481 + V729 + V505 + V191 + V212 + V445 + V714 + V113 + V136 + M5 + H7 + travel_time,
    design = DHS_children_sub_weighted,
    family = gaussian(),
    rescale = T
)

## Null model (no predictors)
glm_stuned_null <- svyglm(
    formula = HW5 ~ 1,
    family = gaussian(),
    design = DHS_children_sub_weighted,
    rescale = T
)

## GLM with travel_time_cat as a predictor instead of the continuous variable
glm_stunted <- svyglm(
    formula = HW5 ~ B4 + BORD + M19 + B11 + H11 + H22 + V481 + V729 + V505 + V191 + V212 + V445 + V714 + V113 + V136 + M5 + H7 + travel_time_cat,
    design = DHS_children_sub_weighted,
    family = gaussian(),
    rescale = T
)


# Model summary and checking
modelsummary(glm_stunted,
    stars = T,
    coef_rename = TRUE
)

summary(glm_stunted)
check_model(glm_stunted)

## Plot the GLM model
plot(glm_stunted)

## Model performance metrics
performance(glm_stunted)

## Calculate the variance inflation factor (VIF) for the model
vif(glm_stunted)

## Visualize regression relationships
ggcoef_model(glm_stunted)
```

### GLM underweight weighted not imputed

```{r GLM underweight weighted not imputed}
# Generalized Linear Model for Underweight (HW8)
## Initial GLM with all potential predictors
glm_underweight <- svyglm(
    formula = HW8 ~ B4 + BORD + B0 + M19 + B11 + H11 + H22 + V481 + V149 + V729 + V505 + V191 + V212 + V445 + V714 + V113 + V136 + M5 + H7 + travel_time,
    design = DHS_children_sub_weighted,
    family = gaussian(),
    rescale = T
)

## Removing V149 and B0 due to high VIF (multicollinearity)
glm_underweight <- svyglm(
    formula = HW8 ~ B4 + BORD + M19 + B11 + H11 + H22 + V481 + V729 + V505 + V191 + V212 + V445 + V714 + V113 + V136 + M5 + H7 + travel_time,
    design = DHS_children_sub_weighted,
    family = gaussian(),
    rescale = T
)

## GLM with travel_time_cat as a predictor instead of continuous variable
glm_underweight <- svyglm(
    formula = HW8 ~ B4 + BORD + M19 + B11 + H11 + H22 + V481 + V729 + V505 + V191 + V212 + V445 + V714 + V113 + V136 + M5 + H7 + travel_time_cat,
    design = DHS_children_sub_weighted,
    family = gaussian(),
    rescale = T
)


# Model summary and checking
modelsummary(glm_underweight,
    stars = T,
    coef_rename = TRUE
)

summary(glm_underweight)
check_model(glm_underweight)

## Plot the GLM model
plot(glm_underweight)

## Model performance metrics
performance(glm_underweight)

## Calculate the variance inflation factor (VIF) for the model
vif(glm_underweight)

## Visualize regression relationships
ggcoef_model(glm_underweight)
```

### GLM wasting weighted not imputed 

```{r GLM wasting weighted not imputed}
# Generalized Linear Model for Wasting (HW11)
## Initial GLM with all potential predictors
glm_wasted <- svyglm(
    formula = HW11 ~ B4 + BORD + B0 + M19 + B11 + H11 + H22 + V481 + V149 + V729 + V505 + V191 + V212 + V445 + V714 + V113 + V136 + M5 + H7 + travel_time,
    design = DHS_children_sub_weighted,
    family = gaussian(),
    rescale = T
)

## Removing V149 and B0 due to high VIF (multicollinearity)
glm_wasted <- svyglm(
    formula = HW11 ~ B4 + BORD + M19 + B11 + H11 + H22 + V481 + V729 + V505 + V191 + V212 + V445 + V714 + V113 + V136 + M5 + H7 + travel_time,
    design = DHS_children_sub_weighted,
    family = gaussian(),
    rescale = T
)

## GLM with travel_time_cat as a predictor instead of continuous variable
glm_wasted <- svyglm(
    formula = HW11 ~ B4 + BORD + M19 + B11 + H11 + H22 + V481 + V729 + V505 + V191 + V212 + V445 + V714 + V113 + V136 + M5 + H7 + travel_time_cat,
    design = DHS_children_sub_weighted,
    family = gaussian(),
    rescale = T
)

# Model summary and checking
modelsummary(glm_wasted,
    stars = T,
    coef_rename = TRUE
)

summary(glm_wasted)
check_model(glm_wasted)

## Plot the GLM model
plot(glm_wasted)

## Model performance metrics
performance(glm_wasted)

## Calculate the variance inflation factor (VIF) for the model
vif(glm_wasted)

## Visualize regression relationships
ggcoef_model(glm_wasted)
```

### Model comparison

```{r Model comparison}
# Comparing Models for Stunting, Wasting, and Underweight
## Create a list of the GLMs for stunting, wasting, and underweight
models <- modelsummary(list(glm_stunted, glm_wasted, glm_underweight),
    stars = TRUE,
    coef_rename = TRUE,
    col.names = c("", "Stunting", "Wasting", "Underweight"),
    coef_omit = "^(?!Trav)",
    gof_omit = ".*",
    conf_level = 0.95,
    fmt = fmt_significant(3),
    statistic = "{p.value} [{conf.low}, {conf.high}]"
)

## Display the model summary
models

# Define the output file and statistics type
## output = "models.docx"  # Uncomment this line if you want to save the results to a Word document
statistic <- "conf.int"


# Define which statistics to include in the comparison
## gof_map = c("nobs", "rmse")  # Uncomment this line if you want to include additional statistics


# Compare the models and create a comparison plot
ggcoef_compare(
    model = list("Stunted" = glm_stunted, "Wasted" = glm_wasted, "Underweight" = glm_underweight),
    type = "dodged",
    conf.int = TRUE,
    conf.level = 0.95,
    add_reference_rows = TRUE,
    significance = 0.05,
    include = c("V729", "V191", "V445", "B4", "BORD", "M19", "B11", "V113", "M5", "V505", "H7", "travel_time_cat"),
    no_reference_row = c("B11", "H7")
)
```
